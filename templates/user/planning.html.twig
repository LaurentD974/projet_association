{% extends 'base.html.twig' %}
{% set hide_footer = true %}

{% block title %}Planning{% endblock %}

{# === Styles n√©cessaires des librairies (pas de CSS perso) === #}
{% block stylesheets %}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css">
  <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/dist/tippy.css">
  <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/themes/light.css">
{% endblock %}

{% block body %}
<div class="container py-4">

  {# Bandeau "Actus" (optionnel si news_list vide) #}
  {% if news_list is defined and news_list|length > 0 %}
    <div id="newsCarousel" class="carousel slide mb-3" data-bs-ride="carousel" data-bs-interval="7000">
      <div class="carousel-indicators">
        {% for news in news_list %}
          <button type="button"
                  data-bs-target="#newsCarousel"
                  data-bs-slide-to="{{ loop.index0 }}"
                  class="{% if loop.first %}active{% endif %}"
                  {% if loop.first %}aria-current="true"{% endif %}
                  aria-label="Slide {{ loop.index }}"></button>
        {% endfor %}
      </div>

      <div class="carousel-inner rounded shadow-sm">
        {% for news in news_list %}
          {% if news.title or news.content %}
            <div class="carousel-item {% if loop.first %}active{% endif %}">
              <div class="d-flex align-items-center gap-3 p-3 bg-light">
                <h4 class="h6 text-primary m-0 text-truncate" style="max-width: 280px;">
                  {{ news.title }}
                </h4>
                <p class="m-0 text-truncate" style="max-width: 100%;">
                  {{ news.content }}
                </p>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>

      <button class="carousel-control-prev" type="button" data-bs-target="#newsCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Pr√©c√©dent</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#newsCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Suivant</span>
      </button>
    </div>
  {% endif %}

  <div class="d-flex align-items-center justify-content-between flex-wrap gap-2 mb-2">
    <h2 class="h5 m-0">PLANNING DE L'ASSOCIATION</h2>

    <div class="d-flex align-items-center gap-2">
      <a href="{{ path('user_search') }}" class="btn btn-outline-primary">üîô Trombinoscope</a>
      <a href="{{ path('home') }}" class="btn btn-outline-secondary">üè† Accueil</a>

      {% if app.user and ('ROLE_GACHEUR' in app.user.roles or 'ROLE_ADMIN' in app.user.roles) %}
        <a
          href="{% if 'ROLE_ADMIN' in app.user.roles %}{{ path('admin_dashboard') }}{% else %}{{ path('gacheur_dashboard') }}{% endif %}"
          class="btn {% if 'ROLE_ADMIN' in app.user.roles %}btn-dark{% else %}btn-success{% endif %}">
          {% if 'ROLE_ADMIN' in app.user.roles %}üõ†Ô∏è Dashboard Admin{% else %}üéØ Dashboard G√¢cheur{% endif %}
        </a>
      {% endif %}
    </div>
  </div>

  <div class="card shadow-sm">
    <div class="card-body p-2">
      <div id="calendar"></div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
  <script src="https://unpkg.com/@popperjs/core@2"></script>
  <script src="https://unpkg.com/tippy.js@6"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const calendarEl = document.getElementById('calendar');

      const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        locale: 'fr',
        timeZone: 'Indian/Reunion',
        titleFormat: { year: 'numeric', month: 'long' },
        events: '/api/events',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },

        // Rendu compact : FullCalendar g√®re d√©j√† le style via sa CSS
        eventContent(arg) {
          const timeEl = document.createElement('div');
          timeEl.textContent = arg.timeText;
          const titleEl = document.createElement('div');
          titleEl.textContent = arg.event.title;
          return { domNodes: [timeEl, titleEl] };
        },

        eventDidMount(info) {
          const e = info.event;
          const props = e.extendedProps;

          const start = info.event.start;
          const dateStr = start ? start.toLocaleDateString('fr-FR') : '';

          const html = `
            <strong>${e.title}</strong><br>
            üïí Heure : ${info.timeText || '‚Äî'}<br>
            üìÖ Date : ${dateStr}<br>
            üìç Lieu : ${props.location || 'Non pr√©cis√©'}<br>
            üè∑Ô∏è Type : ${props.type || 'Non sp√©cifi√©'}<br>
            üìÉ Description : ${props.description || 'Pas de description'}
          `;

          tippy(info.el, {
            content: html,
            allowHTML: true,
            theme: 'light',
            animation: 'fade',
            placement: 'top'
          });
        },

        eventClick(info) {
          const e = info.event;
          const props = e.extendedProps;

          const startDate = new Date(e.start);
          const endDate = new Date(startDate.getTime() + 4 * 60 * 60 * 1000);

          const pad = (v) => v.toString().padStart(2, '0');
          const formatGoogle = (d) =>
            d.getUTCFullYear() +
            pad(d.getUTCMonth() + 1) +
            pad(d.getUTCDate()) + 'T' +
            pad(d.getUTCHours()) +
            pad(d.getUTCMinutes()) +
            '00Z';

          const gStart = formatGoogle(startDate);
          const gEnd = formatGoogle(endDate);
          const title = encodeURIComponent(e.title);
          const location = encodeURIComponent(props.location || '');
          const details = encodeURIComponent(
            `${props.description || 'Pas de description'}\nType: ${props.type || 'Non sp√©cifi√©'}`
          );

          const googleLink = `https://www.google.com/calendar/render?action=TEMPLATE&text=${title}&dates=${gStart}/${gEnd}&details=${details}&location=${location}`;
          const outlookLink = `https://outlook.live.com/owa/?rru=addevent&subject=${title}&location=${location}&body=${details}&startdt=${startDate.toISOString()}&enddt=${endDate.toISOString()}`;

          // Petit "modal" simplifi√© sans CSS perso
          const modal = document.createElement('div');
          modal.innerHTML = `
            <div class="card shadow" style="max-width:420px;">
              <div class="card-body">
                <h3 class="h5">${e.title}</h3>
                <p class="mb-1"><strong>D√©but :</strong> ${startDate.toLocaleString('fr-FR')}</p>
                <p class="mb-1"><strong>Fin :</strong> ${endDate.toLocaleString('fr-FR')}</p>
                <p class="mb-1"><strong>Lieu :</strong> ${props.location || 'Non renseign√©'}</p>
                <p class="mb-1"><strong>Type :</strong> ${props.type || 'Non pr√©cis√©'}</p>
                <p class="mb-3"><strong>Description :</strong> ${props.description || 'Pas de description'}</p>
                <div class="d-flex gap-2">
                  <a class="btn btn-outline-primary btn-sm" href="${googleLink}" target="_blank" rel="noopener">Ajouter √† Google</a>
                  <a class="btn btn-outline-secondary btn-sm" href="${outlookLink}" target="_blank" rel="noopener">Ajouter √† Outlook</a>
                </div>
              </div>
            </div>
          `;
          Object.assign(modal.style, {
            position: 'fixed',
            top: '20%',
            left: '50%',
            transform: 'translateX(-50%)',
            zIndex: 1055,
          });

          // Overlay Bootstrap-like
          const backdrop = document.createElement('div');
          Object.assign(backdrop.style, {
            position: 'fixed',
            inset: 0,
            background: 'rgba(0,0,0,.5)',
            zIndex: 1050,
          });

          document.body.append(backdrop, modal);

          const closeAll = (ev) => {
            if (!modal.contains(ev.target)) {
              modal.remove();
              backdrop.remove();
              document.removeEventListener('click', closeAll);
            }
          };
          setTimeout(() => document.addEventListener('click', closeAll), 0);
        },

        eventColor: '#27ae60',
        eventDisplay: 'block',
        loading(isLoading) {
          calendarEl.classList.toggle('opacity-50', isLoading);
        }
      });

      calendar.render();
    });
  </script>
{% endblock %}
